// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String     @unique @default(uuid())
  name      String?
  username  String     @unique
  email     String     @unique
  password  String
  role      UserRole
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  Otp      Otp?
  Adoption Adoption[]

  @@map("users")
}

model Pet {
  id               String          @unique @default(uuid())
  name             String
  photo            String
  briefDescription String
  age              Int
  breed            String
  location         String
  animalType       AnimalType
  healthStatus     PetHealthStatus @default(NOT_AVAILABLE)
  status           PetStatus       @default(AVAILABLE)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  Adoption         Adoption[]

  @@map("pets")
}

model Otp {
  id    String @unique @default(uuid())
  email String @unique
  user  User   @relation(fields: [email], references: [email])
  otp   Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Adoption {
  id String @unique @default(uuid())

  userEmail String
  user      User   @relation(fields: [userEmail], references: [email])

  petId String
  pet   Pet    @relation(fields: [petId], references: [id])

  status AdoptionStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userEmail, petId])
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum AnimalType {
  CAT
  DOG
  BIRD
  RABBIT
  OTHER
}

enum PetHealthStatus {
  VACCINATED
  NEUTERED
  NOT_AVAILABLE
}

enum PetStatus {
  AVAILABLE
  UNAVAILABLE
  DELETED
  REQUESTED
  ADOPTED
}

enum AdoptionStatus {
  PENDING
  UNDER_PROCESS
  APPROVED
  REJECTED
}
